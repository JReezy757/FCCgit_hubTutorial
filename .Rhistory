my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == is.na()
my_data == is.na(my_data)
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[(c(3, 5, 7)]
x(c(3, 5, 7))
x(c[3, 5, 7)]
x(c[3, 5, 7])
skip()
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dimy(my_vector)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = my_matrix, nrow = 4, ncol = 5, byrow = FALSE, dimnames = NULL)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(cnames)
colnames(my_data, cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!5 = 7
5 != 7
5 !== 7
!5 = 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
skip()
dir.create(test.dir)
dir.create("test.dir")
dir.create("testdir")
setwd("testdir")
file.create("my_test.R")
file.create(my_test.R)
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
skip()
setwd(old.dir)
library(readr)
skip()
skip()
urban <- read_csv(file.path(datapath, "urban.csv.gz")
skip()
skip()
head(urban)
skip()
play()
urban <- read_csv(datafile, col_types = "cccd-c")
urban <- read_csv(datafile, col_types = "cccd")
urban <- read_csv(datafile, col_types = "cccd, -c")
urban <- read_csv(datafile, col_types = "cccd -c")
urban <- read_csv(datafile, col_types = "cccd !c")
next()
nxt()
skip()
#How can we tell read_csv() to not read in the last column of the table? Note that you can use the
#compact string representation of the 'col_types' argument for this too
urban <- read_csv(datafile, col_types = "cccd-")
head(urban)
skip()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, nrow = 10)
head(plants, 10)
tail(plants, 15)
summaary(plants)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
wc_1 <- worldcup %>%
str(wc_1)
wc_1 <- worldcup %>%
str(wc_1)
wc_1 <- worldcup %>%
wc_1 <- worldcup %>%
ls()
wc_1 <- worldcup %>%
skip()
wc_1 <- worldcup %>%
skip()
skip()
reset()
swirl()
wc_2 <- worldcup %>%
select(Time, Passes, Tackles, Saves) %>%
mean(Time, Passes, Tackles, Saves)
skip()
wc_3 <- worldcup %>%
select(Time, Passes, Tackles, Saves) %>%
summarize(Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves)) %>%
str(wc_3)
wc_3 <- worldcup %>%
select(Time, Passes, Tackles, Saves) %>%
summarize(Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves)) %>%
str(Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves))
skip()
wc_4 <- worldcup %>%
select(Time, Passes, Tackles, Saves) %>%
summarize(Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves)) %>%
gather(var, mean) %>%
gather(var, mean, round)
wc_4 <- worldcup %>%
select(Time, Passes, Tackles, Saves) %>%
summarize(Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves)) %>%
gather(var, mean) %>%
gather(var, mean, round = Time, Passes, Tackles, Saves)
skip()
titanic_1 <- titanic %>%
select(Survived, Pclass, Age, Sex)
titanic_1
skip()
reset()
swirl()
wc_1 <- worldcup %>%
select(Time, Passes, Tackles, Saves)
submit()
wc_2 <- worldcup %>%
select(Time, Passes, Tackles, Saves) %>%
Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves)
Saves = mean(Saves)
skip()
skip()
skip()
select(Time, Passes, Tackles, Saves) %>%
summarize(Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves)) %>%
gather(var, mean) %>%
mutate(mean = round(mean, 1))
skip()
skip()
skip()
skip()
skip()
submit()
skip()
skip()
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50")))
submit()
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50", "Over 50"))) %>%
group_by(Pclass, agecat, Sex) %>%
summarize(N = n(),
survivors = sum(Survived == 1),
perc_survived = 100 * survivors / N,
.groups = "drop")
skip()
submit()
reset()
swirl()
skip()
skip()
reset()
swirl()
wc_4 <- worldcup %>%
select(Time, Passes, Tackles, Saves)
submit()
summarize(Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves))
wc_4 <- worldcup %>%
select(Time, Passes, Tackles, Saves) %>%
summarize(Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves))
submit()
wc_4 <- worldcup %>%
select(Time, Passes, Tackles, Saves) %>%
summarize(Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves)) %>%
gather(var, mean)
submit()
wc_4 <- worldcup %>%
select(Time, Passes, Tackles, Saves) %>%
summarize(Time = mean(Time),
Passes = mean(Passes),
Tackles = mean(Tackles),
Saves = mean(Saves)) %>%
gather(var, mean) %>%
mutate(mean = round(mean, 1))
submit()
titanic_1 <- titanic %>%
skip()
skip()
skip()
skip()
skip()
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>%
group_by(Pclass, agecat, Sex) %>%
summarize(N = n(),
survivors = sum(Survived == 1),
perc_survived = 100 * survivors / N,
.groups = "drop")
submit()
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>%
group_by(Pclass, agecat, Sex) %>%
summarize(N = n(),
survivors = sum(Survived == 1),
perc_survived = 100 * survivors / N,
.groups = "drop")
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50", "Over 50"))) %>%
group_by(Pclass, agecat, Sex) %>%
summarize(N = n(),
survivors = sum(Survived == 1),
perc_survived = 100 * survivors / N,
.groups = "drop")
titanic_4
submit()
titanic_3
submit()
titanic_4
titanic_1
titanic_2
titanic_3
titanic_4
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>%
group_by(Pclass, agecat, Sex) %>%
summarize(N = n(),
survivors = sum(Survived == 1),
perc_survived = 100 * survivors / N,
.groups = "drop")
titanic_4
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50", "Over 50"))) %>%
group_by(Pclass, agecat, Sex) %>%
summarize(N = n(),
survivors = sum(Survived == 1),
perc_survived = 100 * survivors / N,
.groups = "drop")
titanic_1
titanic_4
titanic_1 <- titanic %>%
select(Survived, Pclass, Age, Sex)
titanic_1
submit()
titanic_2 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age))
titanic_2
submit()
titanic_3 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50", "Over 50")))
titanic_3
submit()
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50", "Over 50"))) %>%
group_by(Pclass, agecat, Sex) %>%
summarize(N = n(),
survivors = sum(Survived == 1),
perc_survived = 100 * survivors / N,
.groups = "drop")
titanic_4
submit()
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50")))
titanic_4
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>%
group_by(Pclass, agecat, Sex) %>%
summarize(N = n(),
survivors = sum(Survived == 1),
perc_survived = 100 * survivors / N,
.groups = "drop")
titanic_4
install_course("The R Programming Environment")
install.packages(c("dplyr", "tidyr", "readr", "readxl"))
getwd()
setwd()
setwd("C:\Users\jmr35\AppData\Local\Temp\RtmpU7QlW1\downloaded_packages")
setwd("C:/Users/jmr35/AppData/Local/Temp/RtmpU7QlW1/downloaded_packages")
setwd("C:/Users/jmr35/OneDrive/Documents")
Finals <- read.csv("FinalFiles.csv", TRUE, ",")
Finals <- read.csv("Final_Files.csv", TRUE, ",")
Finals <- read.csv("FinalFiles.csv", TRUE, ",")
Finals <- read.csv("FinalFiles.csv", TRUE, ",")
Finals <- read.csv("aqs_sites", TRUE, ",")
Finals <- read.csv("daily_SPEC_2014.csv.bz2", TRUE, ",")
setwd("C:/Users/jmr35/OneDrive/Documents")
Finals <- read.csv("daily_SPEC_2014.csv.bz2", TRUE, ",")
install.packages(c("dplyr", "tidyr", "readr", "readxl"))
Finals <- read.csv("daily_SPEC_2014.csv.bz2", TRUE, ",")
Finals <- read.csv("daily_SPEC_2014.csv", TRUE, ",")
Finals <- read.csv("quiz_data.csv.BZ2", TRUE, ",")
Finals <- read.csv("quiz_data.csv.bz2", TRUE, ",")
Finals <- read.csv("daily_SPEC_2014.csv.bz2", TRUE, ",")
Finals <- read.csv("quiz_data.csv", TRUE, ",")
Finals <- read.csv("quiz_data.csv.csv", TRUE, ",")
Finals <- read.csv("quiz_data.csv.BZ2", TRUE, ",")
xx <- 5
yy <- 7
plot(x, y)
xx <- 5:10
yy <- 7:9
plot(x, y)
xx <- 1:10
yy <- x^2
plot(x, y)
plot(xx, yy)
xx <- 10
yy <- x^2
plot(xx, yy)
xx <- 1:10
yy <- x^2
yy <- sqrt(x)
plot(xx, yy)
yy <- xx^2
plot(xx, yy)
plot(xx, yy, color = blue)
plot(xx, yy, color = red)
setwd("C:\jmr35\Desktop")
setwd("C:\Users\jmr35\Desktop")
setwd("C:/Users/jmr35/Desktop")
Finals <- read.csv("quiz_data.csv.BZ2", TRUE, ",")
Finals2 <- file.choose("quiz_data.csv")
Finals <- read.csv("quiz_data.csv", TRUE, ",")
getwd()
Finals
Finals <- file.choose(quiz_data.csv)
Finals <- file.choose("quiz_data.csv")
Finals
read.csv("daily_SPEC_2014.csv")
?rt
read.csv("daily_SPEC_2014.csv.bz2", n_max = 10)
read.csv("daily_SPEC_2014.csv.bz2", max = 10)
read.csv("daily_SPEC_2014.csv.bz2", nrows = 10, ncol = 10)
read.csv("daily_SPEC_2014.csv.bz2", nrows = 10, ncol(10))
read.csv("daily_SPEC_2014.csv", nrows = 10, ncol(10))
read.csv("quiz_data.csv", nrows = 10, ncol(10))
read.csv("daily_SPEC_2104.bz2")
read.csv("quiz_data.csv$daily_SPEC_2014.bz2")
read.csv("C:\Users\jmr35\Downloads\quiz_data.csv")
read.csv("C:/Users/jmr35/Downloads/quiz_data.csv")
read.csv("C:/Users/jmr35/Downloads/quiz_data.csv")
read.csv(dir.exists("C:/Users/jmr35/Downloads/quiz_data.csv")
read.csv("C:/Users/jmr35/Downloads/quiz_data.csv")
read.csv("C:/Users/jmr35/Downloads/quiz_data.csv")
read.csv("C:/Users/jmr35/Downloads/quiz_data.csv")
read.csv("C:/Users/jmr35/Downloads/quiz_data.csv")
read.csv("C:/Users/jmr35/Downloads/quiz_data.csv$aqs_sites.csv")
Finals <- read.csv(file.choose(), header = TRUE)
Finals
library(readr)
read_csv(file.choose(), header = TRUE)
read_csv(file.choose())
read_csv(file.choose("daily_SPEC_2014.csv"))
Finals2 <- read_csv(file.choose("daily_SPEC_2014.csv"))
Finals2
mean(Finals, na.rm = TRUE)
library("dplyr", "tidyr", "readr", "readxl")
mean(Finals, na.rm = TRUE)
install.packages(c("dplyr", "tidyr", "readr", "readxl"))
Finals
install.packages(c("dplyr", "tidyr", "readr", "readxl"))
